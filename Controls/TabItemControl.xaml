<helpers:BaseUserControl x:Class="TabsManagerExtension.Controls.TabItemControl"
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                         xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:local="clr-namespace:TabsManagerExtension"
                         xmlns:localControls="clr-namespace:TabsManagerExtension.Controls"
                         xmlns:localConverters="clr-namespace:TabsManagerExtension.Converters"
                         xmlns:localBehaviours="clr-namespace:TabsManagerExtension.Behaviours"
                         xmlns:localStateDocument="clr-namespace:TabsManagerExtension.State.Document"
                         xmlns:helpers="clr-namespace:Helpers"
                         x:Name="__TabItemControl"
                         >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/TabsManagerExtension;component/Styles/BrushResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>


            <Style x:Key="SelectableCheckBoxContainerStyle" TargetType="CheckBox">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"/>
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <!-- 
                                Обязательно задаём Background, иначе Padding не ловит клики.
                                Без этого CheckBox не реагирует на нажатия вне текста.
                            -->
                            <Border Padding="5,0,0,0"
                                    Margin="0,0,5,0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    IsHitTestVisible="True"
                                    >
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource AppIsMouseOverBrush}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource AppIsMouseOverBrush}" />
                    </Trigger>

                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                        <Setter Property="FontWeight" Value="Bold"/>
                    </DataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected}" Value="True"/>
                            <Condition Binding="{Binding [TextEditorFrameFocused], Source={x:Static helpers:GlobalFlags.Metadata}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource AppSelectedBrush}" />
                        <Setter Property="BorderBrush" Value="{StaticResource AppSelectedBrush}" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected}" Value="True"/>
                            <Condition Binding="{Binding [TextEditorFrameFocused], Source={x:Static helpers:GlobalFlags.Metadata}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource AppSelectedNonActiveBrush}" />
                        <Setter Property="BorderBrush" Value="{StaticResource AppSelectedNonActiveBrush}" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Metadata[IsCtxMenuOpenned]}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource AppIsMouseOverBrush}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource AppIsMouseOverBrush}" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Metadata[IsActive]}" Value="True"/>
                            <Condition Binding="{Binding [TextEditorFrameFocused], Source={x:Static helpers:GlobalFlags.Metadata}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="{StaticResource AppAccentBrush}" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Metadata[IsActive]}" Value="True"/>
                            <Condition Binding="{Binding [TextEditorFrameFocused], Source={x:Static helpers:GlobalFlags.Metadata}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="{StaticResource AppAccentNonActiveMiddleBrush}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="ControlPanelStyle" TargetType="Grid">
                <Setter Property="Visibility" Value="Visible" />
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsPinnedTab}" Value="False"/>
                            <Condition Binding="{Binding IsMouseInside, ElementName=__TabItemControl}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Visibility" Value="Collapsed" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="ControlPanelPrimarySlotTemplateStyle" TargetType="ContentPresenter">
                <Setter Property="Visibility" Value="Visible" />
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsPinnedTab}" Value="True"/>
                            <Condition Binding="{Binding IsMouseInside, ElementName=__TabItemControl}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Visibility" Value="Hidden" />
                    </MultiDataTrigger>

                    <!--<DataTrigger Binding="{Binding IsSelected}" Value="True">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>-->
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>


    <Grid>
        <CheckBox Style="{StaticResource SelectableCheckBoxContainerStyle}"
                  IsChecked="{Binding IsSelected, ElementName=__TabItemControl, Mode=TwoWay}"
                  >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"
                           Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"
                           FontSize="12"
                           Margin="5,0,5,0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           TextTrimming="CharacterEllipsis"
                           Text="{Binding Title, ElementName=__TabItemControl}" 
                           />
                <Grid Style="{StaticResource ControlPanelStyle}"
                      Grid.Column="1"
                      HorizontalAlignment="Right"
                      >
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter Content="{Binding}" 
                                          ContentTemplate="{Binding ControlPanelSecondarySlotTemplate, ElementName=__TabItemControl}"
                                          />
                        <ContentPresenter Style="{StaticResource ControlPanelPrimarySlotTemplateStyle}"
                                          Content="{Binding}" 
                                          ContentTemplate="{Binding ControlPanelPrimarySlotTemplate, ElementName=__TabItemControl}"
                                          />
                    </StackPanel>
                </Grid>
            </Grid>
        </CheckBox>

        <!-- Контекстное меню -->
        <ContentPresenter x:Name="ContextMenuContentPresenter"
                          Content="{Binding}" 
                          ContentTemplate="{Binding ContextMenuTemplate, ElementName=__TabItemControl}"
                          />
    </Grid>
</helpers:BaseUserControl>
