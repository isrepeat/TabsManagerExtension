<UserControl x:Class="TabsManagerExtension.Controls.TabItemControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:local="clr-namespace:TabsManagerExtension"
             xmlns:localHelpers="clr-namespace:Helpers"
             xmlns:localControls="clr-namespace:TabsManagerExtension.Controls"
             x:Name="RootControl"
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/TabsManagerExtension;component/Styles/BrushResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        
            <Style TargetType="localControls:TabItemControl">
                <Setter Property="ControlPanelVisibility" Value="Collapsed"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="ControlPanelVisibility" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="ControlPanelVisibility" Value="Collapsed"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        

            <Style x:Key="SelectableCheckBoxContainerStyle" TargetType="CheckBox">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"/>
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <!-- 
                                Обязательно задаём Background, иначе Padding не ловит клики.
                                Без этого CheckBox не реагирует на нажатия вне текста.
                            -->
                            <Border Padding="5, 5"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    IsHitTestVisible="True"
                                    >
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource AppIsMouseOverBrush}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource AppIsMouseOverBrush}" />
                    </Trigger>

                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                        <Setter Property="FontWeight" Value="Bold"/>
                    </DataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected}" Value="True"/>
                            <Condition Binding="{Binding [TextEditorOrTabsManagerControlFocused], Source={x:Static localHelpers:GlobalFlags.Metadata}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource AppSelectedBrush}" />
                        <Setter Property="BorderBrush" Value="{StaticResource AppSelectedBrush}" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected}" Value="True"/>
                            <Condition Binding="{Binding [TextEditorOrTabsManagerControlFocused], Source={x:Static localHelpers:GlobalFlags.Metadata}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource AppSelectedNonActiveBrush}" />
                        <Setter Property="BorderBrush" Value="{StaticResource AppSelectedNonActiveBrush}" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Metadata[IsActive]}" Value="True"/>
                            <Condition Binding="{Binding [TextEditorOrTabsManagerControlFocused], Source={x:Static localHelpers:GlobalFlags.Metadata}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="{StaticResource AppAccentBrush}" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Metadata[IsActive]}" Value="True"/>
                            <Condition Binding="{Binding [TextEditorOrTabsManagerControlFocused], Source={x:Static localHelpers:GlobalFlags.Metadata}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="{StaticResource AppAccentNonActiveMiddleBrush}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>


    <CheckBox Style="{StaticResource SelectableCheckBoxContainerStyle}"
              IsChecked="{Binding IsSelected, ElementName=RootControl, Mode=TwoWay}"
              >
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock x:Name="TitleTextBlock"
                        Grid.Column="0"
                        Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"
                        FontSize="12"
                        Margin="5,0,5,0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        TextTrimming="CharacterEllipsis"
                        Text="{Binding Title, ElementName=RootControl}" 
                        />
            <Grid x:Name="ControlPanel"
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    Visibility="{Binding ControlPanelVisibility, ElementName=RootControl}"
                    >
                <StackPanel Orientation="Horizontal">
                    <ContentPresenter Content="{Binding ControlPanelContent, ElementName=RootControl}"/>
                </StackPanel>
            </Grid>
        </Grid>
    </CheckBox>
</UserControl>
