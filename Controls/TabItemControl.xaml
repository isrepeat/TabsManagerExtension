<UserControl x:Class="TabsManagerExtension.Controls.TabItemControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:local="clr-namespace:TabsManagerExtension"
             xmlns:localHelpers="clr-namespace:Helpers"
             xmlns:localControls="clr-namespace:TabsManagerExtension.Controls"
             x:Name="RootControl"
             MouseRightButtonUp="RootControl_MouseRightButtonUp"
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/TabsManagerExtension;component/Styles/BrushResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="localControls:TabItemControl">
                <Setter Property="ControlPanelVisibility" Value="Collapsed"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="ControlPanelVisibility" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="ControlPanelVisibility" Value="Collapsed"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="SelectableCheckBoxContainerStyle" TargetType="CheckBox">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"/>
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <!-- 
                                Обязательно задаём Background, иначе Padding не ловит клики.
                                Без этого CheckBox не реагирует на нажатия вне текста.
                            -->
                            <Border Padding="5,0,0,0"
                                    Margin="0,0,5,0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    IsHitTestVisible="True"
                                    >
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource AppIsMouseOverBrush}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource AppIsMouseOverBrush}" />
                    </Trigger>

                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                        <Setter Property="FontWeight" Value="Bold"/>
                    </DataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected}" Value="True"/>
                            <Condition Binding="{Binding [TextEditorOrTabsManagerControlFocused], Source={x:Static localHelpers:GlobalFlags.Metadata}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource AppSelectedBrush}" />
                        <Setter Property="BorderBrush" Value="{StaticResource AppSelectedBrush}" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected}" Value="True"/>
                            <Condition Binding="{Binding [TextEditorOrTabsManagerControlFocused], Source={x:Static localHelpers:GlobalFlags.Metadata}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource AppSelectedNonActiveBrush}" />
                        <Setter Property="BorderBrush" Value="{StaticResource AppSelectedNonActiveBrush}" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Metadata[IsCtxMenuOpenned]}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource AppIsMouseOverBrush}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource AppIsMouseOverBrush}" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Metadata[IsActive]}" Value="True"/>
                            <Condition Binding="{Binding [TextEditorOrTabsManagerControlFocused], Source={x:Static localHelpers:GlobalFlags.Metadata}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="{StaticResource AppAccentBrush}" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Metadata[IsActive]}" Value="True"/>
                            <Condition Binding="{Binding [TextEditorOrTabsManagerControlFocused], Source={x:Static localHelpers:GlobalFlags.Metadata}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="{StaticResource AppAccentNonActiveMiddleBrush}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="CustomMenuItemStyle" TargetType="MenuItem">
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Padding" Value="10,5" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Cursor" Value="Arrow" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="MenuItem">
                            <Border x:Name="_Border"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    >
                                <ContentPresenter ContentSource="Header" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="_Border" Property="Background" Value="#2D2D2D" />
                                    <Setter Property="Foreground" Value="#33BFFF" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="CustomSeparatorStyle" TargetType="Separator">
                <Setter Property="Margin" Value="5,2" />
                <Setter Property="Height" Value="1" />
                <Setter Property="Background" Value="#666" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Separator">
                            <Rectangle Fill="{TemplateBinding Background}"
                                       Height="{TemplateBinding Height}"
                                       />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <CheckBox Style="{StaticResource SelectableCheckBoxContainerStyle}"
                  IsChecked="{Binding IsSelected, ElementName=RootControl, Mode=TwoWay}"
                  >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock x:Name="TitleTextBlock"
                           Grid.Column="0"
                           Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTextKey}}"
                           FontSize="12"
                           Margin="5,0,5,0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           TextTrimming="CharacterEllipsis"
                           Text="{Binding Title, ElementName=RootControl}" 
                           />
                <Grid x:Name="ControlPanel"
                      Grid.Column="1"
                      HorizontalAlignment="Right"
                      Visibility="{Binding ControlPanelVisibility, ElementName=RootControl}"
                      >
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter Content="{Binding ControlPanelContent, ElementName=RootControl}" />
                    </StackPanel>
                </Grid>
            </Grid>
        </CheckBox>

        <Popup x:Name="CustomContextMenu"
               AllowsTransparency="True"
               Placement="MousePoint"
               StaysOpen="False"
               Focusable="False"
               >
            <Border Background="#333"
                    Padding="5"
                    CornerRadius="4"
                    MaxWidth="300"
                    >
                <!-- TEST LAYOUT -->
                <!--<ItemsControl>
                    <ItemsControl.Items>
                        <MenuItem Header="Открыть в проводнике" Style="{StaticResource CustomMenuItemStyle}" />
                        <Separator Style="{StaticResource CustomSeparatorStyle}" />
                        <MenuItem Header="Закрепить" Style="{StaticResource CustomMenuItemStyle}" />
                        <MenuItem Header="Закрыть" Style="{StaticResource CustomMenuItemStyle}" />
                    </ItemsControl.Items>
                </ItemsControl>-->

                <ItemsControl ItemsSource="{Binding ContextMenuItems, ElementName=RootControl}">
                    <ItemsControl.Resources>
                        <DataTemplate DataType="{x:Type localHelpers:MenuItemDefault}">
                            <MenuItem Header="{Binding Header}"
                                      Command="{Binding Command}"
                                      Style="{StaticResource CustomMenuItemStyle}"
                                      />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type localHelpers:MenuItemSeparator}">
                            <Separator Style="{StaticResource CustomSeparatorStyle}" />
                        </DataTemplate>
                    </ItemsControl.Resources>
                </ItemsControl>
            </Border>
        </Popup>
    </Grid>
</UserControl>
